/// blaster.zsc
/// pew pew pew
///
Class ODBlaster : ODWeapon {
	float randOffset;
	
	default {
		inventory.pickupMessage "... How did you drop your blaster? That's what the lanyard is for!";
		weapon.slotNumber 1;
		weapon.SelectionOrder 1000;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 19;
		Weapon.AmmoType "BCharge";
		Weapon.BobStyle "Alpha";
		Weapon.BobRangeX 1.2;
		Weapon.BobRangeY 0.7;
		+WEAPON.NODEATHINPUT;
		//Decal "BulletChip";
		Weapon.yadjust 6;
		+Weapon.Ammo_Optional;
	}	
	
	states {
		Spawn:
			TNT1 A -1;
			Loop;
		Ready:
			BLAS A 1 A_WeaponReady();
			Loop;
		Select:
			BLAS A 1 A_Raise();
			Loop;
		Deselect:
			BLAS A 1 A_Lower();
			Loop;
		Fire:
			BLAF A 5 {
				invoker.randOffset = Random(-2, 2);
				A_FireProjectile("BBolt");
				A_PlaySound("weapons/blastershot");
				A_WeaponOffset(invoker.randOffset, 6, WOF_ADD);
			}
			BLAS C 3;
			BLAS B 2 A_WeaponOffset((invoker.randOffset*-1), -6, WOF_ADD);
			BLAS A 5;
			TNT1 A 0 A_WeaponReady(WRF_NOBOB);
			Goto Ready;
	}
}

Class BCharge : Ammo {
	default {
		inventory.maxamount 19;
	}
}

Class BBolt : FastProjectile {
	int particleCount;
	
	Default {
		Radius 2;
		Height 4;
		Scale 0.6;
		Speed 60;
		Damage (7);
		//ProjectileKickback 200;
		MissileType "BulletTrail";
		MissileHeight 8;
		Projectile;
		+RANDOMIZE
		+BLOODSPLATTER
		RenderStyle "Add";
		//DeathSound "Punch/Wham";
		Alpha 1;
		Decal "RailScorchLower";
		Translation "YellowLightning";
	}
	
	override void PostBeginPlay() {
		particleCount = 40;
		super.postbeginplay();
	}
	
	States {
		Spawn:
			PUFF A 1 Bright;
			Loop;
		Death:
			TNT1 A 0 {
				while (particlecount > 0) {
					A_SpawnParticle("Yellow",
						flags: SPF_RELATIVE|SPF_FULLBRIGHT,
						lifetime: 20,
						size: 2,
						velx: FRandom(-10,10),
						vely: FRandom(-10,10),
						velz: FRandom(-10,10),
						accelz: -1);
					A_SpawnParticle("Orange",
						flags: SPF_RELATIVE|SPF_FULLBRIGHT,
						lifetime: 15,
						size: 2,
						velx: FRandom(-10,10),
						vely: FRandom(-10,10),
						velz: FRandom(-10,10),
						accelz: -1);
					particlecount--;
				}
				return ResolveState(Null);
			}
			/*
			A_SpawnParticle("Yellow",
			flags: SPF_FullBright|SPF_RelAng|SPF_RelVel,
			lifetime: 10,
			size: 5,
			angle: 0,
			xoff: 0,
			yoff: 0,
			zoff: 0,
			velx: frandom(-10,10),
			vely: frandom(-10,10),
			velz: frandom(-10,10),
			accelx: 0,
			accely: 0,
			accelz: -1);
			*/
			PUFF A 1 A_FadeOut(0.2);
			Stop;
	}
	
	/*
		A_SpawnParticle(
			color color1,
			int flags,
			int lifetime,
			float size,
			float angle,
			float xoff,
			float yoff,
			float zoff,
			float velx,
			float vely,
			float velz,
			float accelx,
			float accely,
			float accelz,
			float startalphaf,
			float fadestepf,
			float sizestep
			);	
	*/
}


//eof